# Gradle version catalog: https://docs.gradle.org/current/userguide/version_catalogs.html
# Plugins/libraries declared in this file become available on the `libs` object in build.gradle.kts

[versions]
# Plugin versions
kotlin = "2.1.21"
spotless = "7.0.4"
ktfmt = "0.54"
gradleMavenPublish = "0.32.0"
binaryCompatibilityValidator = "0.17.0"
dokka = "2.0.0"
gradleVersions = "0.52.0"
# Library versions
kotlinxSerialization = "1.8.1"
slf4j = "2.0.17"
logback = "1.5.18"
logstashLogbackEncoder = "8.1"
jackson = "2.19.0"
# Test libraries
kotest = "5.9.1"
log4j = "2.24.3"

[plugins]
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
# Formatter
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
# Plugin recommended by JetBrains for publishing Kotlin multiplatform libraries to Maven Central
# https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-publish-libraries.html
gradleMavenPublish = { id = "com.vanniktech.maven.publish", version.ref = "gradleMavenPublish" }
# Plugin for verifying backwards compatibility by generating .api file of the library's public API
binaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "binaryCompatibilityValidator" }
# Kotlin documentation rendering
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
# Provides dependencyUpdates task to check for new library versions
gradleVersions = { id = "com.github.ben-manes.versions", version.ref = "gradleVersions" }

[libraries]
kotlinxSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logstashLogbackEncoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstashLogbackEncoder" }
jackson = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }

### Test libraries

kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotest = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
# For integration testing other SLF4J logger implementations
log4j = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4jJson = { module = "org.apache.logging.log4j:log4j-layout-template-json", version.ref = "log4j" }
log4jSlf4j = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
slf4jJdk14 = { module = "org.slf4j:slf4j-jdk14", version.ref = "slf4j" }
